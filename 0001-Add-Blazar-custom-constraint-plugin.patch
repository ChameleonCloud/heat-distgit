From 028a33e8f071e3b4e37ae975988db6978eadba7e Mon Sep 17 00:00:00 2001
From: Pierre Riteau <priteau@uchicago.edu>
Date: Fri, 14 Jul 2017 18:02:24 +0100
Subject: [PATCH 1/2] Add Blazar custom constraint plugin

---
 heat/engine/clients/os/blazar.py | 44 ++++++++++++++++++++++++++++++++
 setup.cfg                        |  1 +
 2 files changed, 45 insertions(+)
 create mode 100644 heat/engine/clients/os/blazar.py

diff --git a/heat/engine/clients/os/blazar.py b/heat/engine/clients/os/blazar.py
new file mode 100644
index 000000000..313382aa1
--- /dev/null
+++ b/heat/engine/clients/os/blazar.py
@@ -0,0 +1,44 @@
+#
+#    Licensed under the Apache License, Version 2.0 (the "License"); you may
+#    not use this file except in compliance with the License. You may obtain
+#    a copy of the License at
+#
+#         http://www.apache.org/licenses/LICENSE-2.0
+#
+#    Unless required by applicable law or agreed to in writing, software
+#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
+#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
+#    License for the specific language governing permissions and limitations
+#    under the License.
+
+from heat.common import exception
+from heat.engine.clients import client_plugin
+from heat.engine import constraints
+
+CLIENT_NAME = 'blazar'
+
+
+class BlazarClientPlugin(client_plugin.ClientPlugin):
+
+    service_types = [RESERVATION] = ['manager']
+
+    def is_not_found(self, ex):
+        return (isinstance(ex, exceptions.HTTPClientError) and
+                ex.status_code == 404)
+
+    def get_reservation_by_ref(self, reservation_ref):
+        try:
+            return reservation_ref
+        except Exception as ex:
+            if self.is_not_found(ex):
+                raise exception.EntityNotFound(
+                    entity="Reservation",
+                    name=reservation_ref)
+            raise
+
+
+class ReservationConstraint(constraints.BaseCustomConstraint):
+    expected_exceptions = (exception.EntityNotFound,)
+
+    def validate_with_client(self, client, reservation):
+        pass
diff --git a/setup.cfg b/setup.cfg
index 79b9da3a0..b9530d481 100644
--- a/setup.cfg
+++ b/setup.cfg
@@ -95,6 +95,7 @@ heat.constraints =
 	# service constraints
 	barbican.container = heat.engine.clients.os.barbican:ContainerConstraint
 	barbican.secret = heat.engine.clients.os.barbican:SecretConstraint
+	blazar.reservation = heat.engine.clients.os.blazar:ReservationConstraint
 	cinder.backup = heat.engine.clients.os.cinder:VolumeBackupConstraint
 	cinder.qos_specs = heat.engine.clients.os.cinder:QoSSpecsConstraint
 	cinder.snapshot = heat.engine.clients.os.cinder:VolumeSnapshotConstraint
-- 
2.17.1

